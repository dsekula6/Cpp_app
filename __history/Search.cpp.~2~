//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Search.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TFormSearch *FormSearch;
//---------------------------------------------------------------------------
__fastcall TFormSearch::TFormSearch(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------
void __fastcall TFormSearch::ButtonSearchClick(TObject *Sender)
{
	MainForm->RESTRequest1->Execute();

	// load json
	std::unique_ptr<TStringStream> jsonStream(new TStringStream(Memo1->Text));
	//jsonStream->LoadFromStream();


	//create json object
	TJSONObject* jsonFile = (TJSONObject*)TJSONObject::ParseJSONValue(jsonStream->DataString);
	//ShowMessage(jsonFile->ToString());

	TJSONArray* ResultsArray = (TJSONArray*)TJSONObject::ParseJSONValue(jsonFile->GetValue("results")->ToString());
	//ShowMessage(jsonArray->ToString());

	ListView1->Items->Clear();


	TListItem *ListIt;

	ListView1->ViewStyle = vsReport;

	//std::vector<Album> Albumi;


	int counter = 10;
	for (int i = 0; i < counter; i++) {

			String ResultType = ResultsArray->Items[i]->GetValue<UnicodeString>("type");
			if (ResultType == "release") {


				Album* album1 = new Album;
				album1->LoadFromJSONArray(ResultsArray, i);

				ListIt = ListView1->Items->Add();
				ListIt->Caption = album1->GetId();
				ListIt->SubItems->Add(album1->GetName());
				ListIt->SubItems->Add(album1->GetArtist());
				ListIt->SubItems->Add(album1->GetCoverUrl());

                delete album1;


			}
			else {
				counter++;
			}


	}
}
//---------------------------------------------------------------------------
