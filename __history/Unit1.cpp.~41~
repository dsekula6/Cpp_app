//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Unit1.h"
#include "Unit2.h"
#include "Unit3.h"
#include <fstream>
#include <string>
#include <vector>
#include <sstream>
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TFLogin *FLogin;
//---------------------------------------------------------------------------




__fastcall TFLogin::TFLogin(TComponent* Owner)
: TForm(Owner)
{
}
//---------------------------------------------------------------------------
std::vector<std::string> parsePodaci(std::string line) {
		 std::vector<std::string> rezultat;
		 std::stringstream s_stream(line);

	while (s_stream.good()) {
			std::string substr;
			getline(s_stream, substr, ',');
			rezultat.push_back(substr);

		}
		return rezultat;
}
//---------------------------------------------------------------------------

class LoginPodaci {
private:
	const char* username;
	const char* password;
	std::vector<std::string> parsedLine;

public:
	void SetLine(std::string line) {
		parsedLine = parsePodaci(line);
		
	}
	void SetUsername() {
		username = parsedLine.at(0).c_str();
	}
	void SetPassword() {
		password = parsedLine.at(1).c_str();
	}
	bool CompareUsername(AnsiString ansiUserPass) {
		const char* User = ansiUserPass.c_str();
		if (std::strcmp(User, username)==0){
			return true;
		}
		return false;
	}
	bool ComparePassword(AnsiString ansiUserPass) {
		const char* Pass = ansiUserPass.c_str();
		if (std::strcmp(Pass, password)==0){
			return true;
		}
		return false;
	}
};


//---------------------------------------------------------------------------
void __fastcall TFLogin::ButtonLoginClick(TObject *Sender)
{
//check username & pass
// if username & pass are correct
	fstream myFile;
	myFile.open("korisnici.txt", ios::in);
	if (myFile.is_open()) {
		std::string line;
		// while (getline(myFile, line)) {
		// 	std::vector<std::string> parsedLine = parsePodaci(line);//objekt.setLine(line)
		// 	const char* username = parsedLine.at(0).c_str(); // objekt.setUsername();
		// 	AnsiString eUsername = EditUsername->Text;		 // 
		// 	const char* usernameString = eUsername.c_str();  //objekt.CompareUsername(EditUsername->Text);
		// 	if (std::strcmp(usernameString, username)==0) {	 // 
		// 		const char* password = parsedLine.at(1).c_str();//objekt.setPassword();
		// 		AnsiString ePassword = EditPassword->Text;//
		// 		const char* passwordString = ePassword.c_str();//
		// 		if (std::strcmp(passwordString, password)==0) {//objekt.ComparePassword(EditPassword->Text);
		// 		ModalResult = mrOk;

		// 		}

		// 	}

		// }
		LoginPodaci objekt;
		while (getline(myFile, line)) {
			objekt.SetLine(line);
			objekt.SetUsername();
			
			if (objekt.CompareUsername(EditUsername->Text)) {	 
				objekt.SetPassword();
				
				if (objekt.ComparePassword(EditPassword->Text)) {
				ModalResult = mrOk;

				}

			}

		}
	}
}
//---------------------------------------------------------------------------


void __fastcall TFLogin::ButtonRegisterClick(TObject *Sender)
{

	std::unique_ptr<TFRegister> FRegister(new TFRegister(NULL));
    FRegister->ShowModal();


}
//---------------------------------------------------------------------------

// leso meso